# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# confluent doc how to setup worker config
# https://docs.confluent.io/current/connect/references/allconfigs.html#kconnect-long-worker-configs


# These are defaults. This file just demonstrates how to override some settings.
bootstrap.servers=kafka-stack-release-0.kafka-stack-release-headless.kube-system.svc.cluster.local:9092

# The converters specify the format of data in Kafka and how to translate it into Connect data. Every Connect user will
# need to configure these based on the format they want their data in when loaded from or stored into Kafka
key.converter=org.apache.kafka.connect.json.JsonConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
# Converter-specific settings can be passed in by prefixing the Converter's setting with the converter we want to apply
# it to
key.converter.schemas.enable=true
value.converter.schemas.enable=true

offset.storage.file.filename=/tmp/connect.offsets

# Flush much faster than normal, which is useful for testing/debugging
offset.flush.interval.ms=10000

# Set to a list of filesystem paths separated by commas (,) to enable class loading isolation for plugins
# (connectors, converters, transformations). The list should consist of top level directories that include
# any combination of:
# a) directories immediately containing jars with plugins and their dependencies
# b) uber-jars with plugins and their dependencies
# c) directories immediately containing the package directory structure of classes of plugins and their dependencies
# Note: symlinks will be followed to discover dependencies or plugins.
# Examples (!!!Notice!!! the comma `,` at the end is crucial):
# plugin.path=/usr/local/share/java,/usr/local/share/kafka/plugins,/opt/connectors,

# secure credentials: https://rmoff.net/2019/05/24/putting-kafka-connect-passwords-in-a-separate-file-/-externalising-secrets/
config.providers=file
config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider
# TODO: improve this -- the FileConfigProvider is clearly not working here, but is a better way to do
# however, FileConfigProvider is working in connector config - why is that?
# plugin.path=${file:/tmp/credentials.properties:PLUGINS_PATH},
plugin.path=/opt/bitnami/kafka/connectors


# Kafka Connector REST API
# https://docs.confluent.io/current/connect/references/restapi.html#

# to check connector status, run:
# curl http://$KAFKA_CONNECT_SERVICE_SERVICE_HOST:8083/connectors

# to list all topics, run:
# $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server kafka-stack-release-0.kafka-stack-release-headless.kube-system.svc.cluster.local:9092 --list

# to watch & follow a topic, run:
# $KAFKA_HOME/bin/kafka-console-consumer.sh --bootstrap-server kafka-stack-release-0.kafka-stack-release-headless.kube-system.svc.cluster.local:9092 --topic test.public.test_table --from-beginning